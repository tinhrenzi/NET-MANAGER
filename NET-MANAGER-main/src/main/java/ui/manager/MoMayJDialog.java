/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.manager;

import dao.MayTinhDAO;
import dao.SDMayDAO;
import daoImpl.MayTinhDAOImpl;
import daoImpl.SDMayDAOImpl;
import entity.SuDungMay;
import java.sql.Time;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VINH
 */
public class MoMayJDialog extends javax.swing.JDialog {

    /**
     * Creates new form MoMayJDialog
     *
     * @param parent
     * @param modal
     */
    private Timer dongHoTimer;
    DefaultTableModel model = new DefaultTableModel();
    SDMayDAO dao = new SDMayDAOImpl();
    MayTinhDAO dao1 = new MayTinhDAOImpl();
    List<SuDungMay> items = List.of();

    public MoMayJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        Filltable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMayTinh = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        btnMo = new javax.swing.JButton();
        btnTat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblMaMay = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblGioBatDau = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtGioKetThuc = new javax.swing.JTextField();
        lblTenMay = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btnMenu = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        lblNgayHienTai = new javax.swing.JLabel();
        jdcChoiDenNgay = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mo May");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblMayTinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã máy", "Tên máy", "Trạng thái", "Ngày chơi", "Ngày kết thúc", "Giờ bắt đầu", "Giờ kết thúc", "Giá  tiền theo giờ"
            }
        ));
        tblMayTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMayTinhMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMayTinh);

        btnMo.setText("Mở");
        btnMo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoActionPerformed(evt);
            }
        });

        btnTat.setText("Tắt");
        btnTat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTatActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Mã máy");

        lblMaMay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMaMay.setText("-----");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Giờ bắt đầu");

        lblGioBatDau.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Giờ kết thúc");

        lblTenMay.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTenMay.setText("Máy");

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        lblNgayHienTai.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Ngày nghỉ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 954, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addComponent(btnMo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTat, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 956, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTenMay, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcChoiDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMaMay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGioBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGioKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblNgayHienTai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblTenMay, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblNgayHienTai, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGioBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGioKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(lblMaMay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdcChoiDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnMo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnTat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        DongHo();
        NgayHienTai();
    }//GEN-LAST:event_formWindowOpened

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void tblMayTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMayTinhMouseClicked
        int index = tblMayTinh.getSelectedRow();
        if (index >= 0) {
            fillonclick(index);

            // Lấy dữ liệu giờ kết thúc từ bảng hoặc form
            String gioKetThuc = txtGioKetThuc.getText();

            if (gioKetThuc == null || gioKetThuc.trim().isEmpty()) {
                DongHo();      // Máy đang chạy → bật đồng hồ
            } else {
                TatDongHo();   // Máy đã tắt → tắt đồng hồ
            }
        }
    }//GEN-LAST:event_tblMayTinhMouseClicked

    private void btnMoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoActionPerformed
        SuDungMay entity = this.getFrom(); // Gọi getFrom để lấy dữ liệu từ form

        if (entity == null) {
            return;
        }

        // Đặt trạng thái là "Hoạt động"
        entity.setTrangThai("Hoạt động");
        dao1.capNhatTrangThai(entity.getMaMay(), "Hoạt động");

        // Gọi DAO để mở máy
        dao.MoMay(entity);

        Filltable(); // cập nhật lại bảng
        clear();
    }//GEN-LAST:event_btnMoActionPerformed

    private void btnTatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTatActionPerformed
        TatDongHo();
        SuDungMay entity = this.getFrom(); // Lấy dữ liệu
        if (entity == null) {
            return; // nếu lỗi
        }
        entity.setTrangThai("Ngừng hoạt động");
        dao1.capNhatTrangThai(entity.getMaMay(), "Ngừng hoạt động");
        // cập nhật trạng thái
        dao.TatMay(entity); // gọi DAO xử lý
        Filltable(); // load lại bảng
        clear(); // reset form
    }//GEN-LAST:event_btnTatActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        String maMay = lblMaMay.getText();
        String tenMay = lblTenMay.getText(); // lblTitle đang hiển thị tên máy

        if (maMay == null || maMay.equals("MT") || maMay.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một máy trước khi mở menu.");
            return;
        }

        MenuJDialog menuDialog = new MenuJDialog((java.awt.Frame) this.getParent(), true, maMay, tenMay);
        menuDialog.setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
  int selectedRow = tblMayTinh.getSelectedRow();
    if (selectedRow >= 0) {
        Object valMaMay = tblMayTinh.getValueAt(selectedRow, 0);
        Object valNgayVao = tblMayTinh.getValueAt(selectedRow, 3);
        Object valNgayNghi = tblMayTinh.getValueAt(selectedRow, 4);
        Object valGioVao = tblMayTinh.getValueAt(selectedRow, 5);
        Object valGioNghi = tblMayTinh.getValueAt(selectedRow, 6);
        Object valGiaTheoGio = tblMayTinh.getValueAt(selectedRow, 7);

        if (valMaMay == null || valNgayVao == null || valNgayNghi == null
                || valGioVao == null || valGioNghi == null || valGiaTheoGio == null) {
            JOptionPane.showMessageDialog(this, "Dữ liệu không đầy đủ. Vui lòng kiểm tra lại.");
            return;
        }

        String maMay = valMaMay.toString();
        String ngayVao = valNgayVao.toString();
        String ngayNghi = valNgayNghi.toString();
        String gioVao = valGioVao.toString();
        String gioNghi = valGioNghi.toString();

        float giaTheoh;
        try {
            giaTheoh = (valGiaTheoGio instanceof Number)
                ? ((Number) valGiaTheoGio).floatValue()
                : Float.parseFloat(valGiaTheoGio.toString());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Giá theo giờ không hợp lệ.");
            return;
        }

        // Mở form thanh toán và truyền dữ liệu
        ThanhToanJDialog dialog = new ThanhToanJDialog(null, true, maMay, ngayVao, ngayNghi, gioVao, gioNghi, giaTheoh);
        dialog.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng trong bảng.");
    }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoMayJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoMayJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoMayJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoMayJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MoMayJDialog dialog = new MoMayJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void fillonclick(int row) {
        Object MaMay = tblMayTinh.getValueAt(row, 0);
        lblTenMay.setText((String) tblMayTinh.getValueAt(row, 1));
        Object TrangThai = tblMayTinh.getValueAt(row, 2);
        Object NgayChoi = tblMayTinh.getValueAt(row, 3);
        Object Bd = tblMayTinh.getValueAt(row, 5);
        Object Kt = tblMayTinh.getValueAt(row, 6);
        jdcChoiDenNgay.setDate((java.sql.Date) tblMayTinh.getValueAt(row, 4));
        lblMaMay.setText(MaMay != null ? MaMay.toString() : "");
        lblGioBatDau.setText(Bd != null ? Bd.toString() : "");
        txtGioKetThuc.setText(Kt != null ? Kt.toString() : "");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnMo;
    private javax.swing.JButton btnTat;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private com.toedter.calendar.JDateChooser jdcChoiDenNgay;
    private javax.swing.JLabel lblGioBatDau;
    private javax.swing.JLabel lblMaMay;
    private javax.swing.JLabel lblNgayHienTai;
    private javax.swing.JLabel lblTenMay;
    private javax.swing.JTable tblMayTinh;
    private javax.swing.JTextField txtGioKetThuc;
    // End of variables declaration//GEN-END:variables
    public void Filltable() {
        model = (DefaultTableModel) tblMayTinh.getModel();
        model.setRowCount(0);
        DecimalFormat df = new DecimalFormat("#,##0 VNĐ");
        items = dao.findAll();
        items.forEach(i -> {
            Object[] rowdata = {
                i.getMaMay(),
                i.getTenMay(),
                i.getTrangThai(),
                i.getNgayChoi(),
                i.getNgayKetThuc(),
                i.getGioBatDau(),
                i.getGioKetThuc(),
                i.getGiaTheoGio(),};
            model.addRow(rowdata);
        });
    }

    public void NgayHienTai() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String ngayHienTai = sdf.format(new Date());
        lblNgayHienTai.setText("Ngày hiện tại: " + ngayHienTai);
    }

    public void DongHo() {
        if (dongHoTimer == null || !dongHoTimer.isRunning()) {
            dongHoTimer = new Timer(1000, e -> {
                Date now = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                lblGioBatDau.setText(sdf.format(now));
            });
            dongHoTimer.start();
        }
    }

    public void TatDongHo() {
        if (dongHoTimer != null && dongHoTimer.isRunning()) {
            dongHoTimer.stop();
        }
    }

    public void clear() {
        lblMaMay.setText("MT");
        lblGioBatDau.setText("");
        txtGioKetThuc.setText("");
        DongHo();
    }

    public SuDungMay getFrom() {
        try {
            SuDungMay sdm = new SuDungMay();

            // Lấy mã máy
            String maMayStr = lblMaMay.getText().trim();
            if (maMayStr.equals("MT") || maMayStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một máy.");
                return null;
            }
            sdm.setMaMay(Integer.parseInt(maMayStr));

            // Ngày chơi = ngày hiện tại
            sdm.setNgayChoi(new java.sql.Date(System.currentTimeMillis()));

            // Giờ bắt đầu
            String gioBatDauStr = lblGioBatDau.getText().trim();
            if (gioBatDauStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Giờ bắt đầu không hợp lệ.");
                return null;
            }
            sdm.setGioBatDau(Time.valueOf(gioBatDauStr));

            // Ngày kết thúc (lấy từ DateChooser)
            Date utilNgayKT = jdcChoiDenNgay.getDate();
            if (utilNgayKT == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày kết thúc.");
                return null;
            }
            sdm.setNgayKetThuc(new java.sql.Date(utilNgayKT.getTime()));

            // Giờ kết thúc
            String gioKetThucStr = txtGioKetThuc.getText().trim();
            if (!gioKetThucStr.isEmpty()) {
                sdm.setGioKetThuc(Time.valueOf(gioKetThucStr));
            } else {
                sdm.setGioKetThuc(null);
            }

            // Lấy giá theo giờ từ bảng (cột 7)
            int selectedRow = tblMayTinh.getSelectedRow();
            if (selectedRow >= 0) {
                Object giaObj = tblMayTinh.getValueAt(selectedRow, 7);
                if (giaObj instanceof Number) {
                    sdm.setGiaTheoGio(((Number) giaObj).floatValue());
                } else if (giaObj instanceof String) {
                    sdm.setGiaTheoGio(Float.parseFloat(giaObj.toString()));
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không xác định được giá theo giờ.");
                return null;
            }

            // Tính tổng tiền nếu có giờ kết thúc
            if (sdm.getGioKetThuc() != null) {
                LocalDateTime start = LocalDateTime.of(
                        sdm.getNgayChoi().toLocalDate(),
                        sdm.getGioBatDau().toLocalTime()
                );

                LocalDateTime end = LocalDateTime.of(
                        sdm.getNgayKetThuc().toLocalDate(),
                        sdm.getGioKetThuc().toLocalTime()
                );

                long minutes = Duration.between(start, end).toMinutes();
                float tongTien = (minutes / 60.0f) * sdm.getGiaTheoGio();
                sdm.setTongTien(tongTien);
            } else {
                sdm.setTongTien(0);
            }

            // Trạng thái mặc định
            sdm.setTrangThai("Hoạt động");

            return sdm;

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi lấy dữ liệu từ form: " + e.getMessage());
            e.printStackTrace();
            return null;
        }
    }

    public void MoMay() {
        SuDungMay entity = this.getFrom();
        dao.MoMay(entity);
        Filltable();
    }

    public void TatMay() {
        SuDungMay entity = this.getFrom();
        dao.TatMay(entity);
        Filltable();
    }
}
