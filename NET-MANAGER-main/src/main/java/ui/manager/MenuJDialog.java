/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.manager;

import daoImpl.MonAnDAOImpl;
import entity.MonAn;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import daoImpl.MenuDAOImpl;
import entity.Menu;
import dao.MenuDAO;
import dao.MonAnDAO;
import java.text.SimpleDateFormat;
import controller.MenuController;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import util.XDialog;
import javax.swing.ImageIcon;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.io.File;
import javax.swing.JDialog;
import util.Style_Net;

/**
 *
 * @author Admin
 */
public class MenuJDialog extends javax.swing.JDialog implements MenuController {

    /**
     * Creates new form MenuJDialog
     */
    private static final int COL_ANH = 3;  // cột Ảnh trong tblOrderManager
    private String duongDanAnhDangChon;

    private MonAnDAO MonAnDao = new MonAnDAOImpl();
    private MenuDAO MenuDao = new MenuDAOImpl();

    public MenuJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Style_Net.styleAllTables(this.getContentPane());
        setLocationRelativeTo(null);
    }
    ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

    public MenuJDialog(java.awt.Frame parent, boolean modal, String maMay, String TenMay) {
        super(parent, modal);
        initComponents();
        Style_Net.styleAllTables(this.getContentPane());
        setLocationRelativeTo(null);
        fillToTable();
        scheduler.schedule(() -> {
            filltblDaNMua();
        }, 1, TimeUnit.SECONDS);
        scheduler.shutdown();
        lblTenMay.setText(TenMay);
        lblMaSd.setText(maMay);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        lblNgayHienTai = new javax.swing.JLabel();
        Tabpnl = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTongMonAn = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDaMua = new javax.swing.JTable();
        lblTenMay = new javax.swing.JLabel();
        lblHinhAnh = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_mua = new javax.swing.JButton();
        btn_them = new javax.swing.JButton();
        btn_Clear = new javax.swing.JButton();
        btn_huy = new javax.swing.JButton();
        lblMaSd = new javax.swing.JLabel();
        btnSua = new javax.swing.JButton();
        lblMaDaMua = new javax.swing.JLabel();
        lblGiaMon = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderManager = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Giao diện thực đơn");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel4MouseEntered(evt);
            }
        });

        lblNgayHienTai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        tblTongMonAn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        tblTongMonAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã món", "Tên món", "Giá", "Số Lượng"
            }
        ));
        tblTongMonAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTongMonAnMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTongMonAn);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        Tabpnl.addTab("Danh sách đang mua", jPanel2);

        tblDaMua.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        tblDaMua.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã đã mua", "Tên món", "Giá món", "Số lượng", "Tổng tiền"
            }
        ));
        tblDaMua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDaMuaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDaMua);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        Tabpnl.addTab("Danh sách đã mua", jPanel3);

        lblTenMay.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTenMay.setText("Tên máy");

        lblHinhAnh.setText("Hình ảnh miêu tả món");

        jLabel5.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel5.setText("Số lượng");

        txtSoLuong.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel4.setText("Tổng");

        lblTongTien.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        lblTongTien.setText("- - - - - - - -");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        btn_mua.setBackground(new java.awt.Color(126, 211, 33));
        btn_mua.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btn_mua.setForeground(new java.awt.Color(255, 255, 255));
        btn_mua.setText("Mua");
        btn_mua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_muaActionPerformed(evt);
            }
        });

        btn_them.setBackground(new java.awt.Color(22, 163, 74));
        btn_them.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btn_them.setForeground(new java.awt.Color(255, 255, 255));
        btn_them.setText("Thêm");
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });

        btn_Clear.setBackground(new java.awt.Color(193, 189, 189));
        btn_Clear.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btn_Clear.setForeground(new java.awt.Color(51, 51, 51));
        btn_Clear.setText("Làm mới");
        btn_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ClearActionPerformed(evt);
            }
        });

        btn_huy.setBackground(new java.awt.Color(233, 78, 60));
        btn_huy.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btn_huy.setForeground(new java.awt.Color(255, 255, 255));
        btn_huy.setText("Hủy mua");
        btn_huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huyActionPerformed(evt);
            }
        });

        lblMaSd.setFont(new java.awt.Font("Segoe UI", 0, 3)); // NOI18N
        lblMaSd.setForeground(new java.awt.Color(204, 204, 204));

        btnSua.setBackground(new java.awt.Color(126, 211, 33));
        btnSua.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        lblMaDaMua.setForeground(new java.awt.Color(204, 204, 204));

        lblGiaMon.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblMaDaMua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaSd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGiaMon, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_them, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_mua, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_huy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Clear, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSua, btn_mua});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_them, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_huy)
                    .addComponent(btn_Clear)
                    .addComponent(btn_mua, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaDaMua, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblMaSd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6))))
                    .addComponent(lblGiaMon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSua, btn_Clear, btn_huy, btn_mua, btn_them});

        jPanel5.setBackground(new java.awt.Color(13, 71, 161));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Thực Đơn");

        tblOrderManager.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        tblOrderManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã đồ món", "Tên món", "Đơn Giá", "Ảnh"
            }
        ));
        tblOrderManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderManagerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblOrderManager);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(Tabpnl, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)))
                        .addComponent(lblNgayHienTai, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTenMay, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(lblTenMay, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNgayHienTai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Tabpnl)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, jLabel5});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1084, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        NgayHienTai();
    }//GEN-LAST:event_formWindowOpened

    private void tblOrderManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderManagerMouseClicked
        int row = tblOrderManager.rowAtPoint(evt.getPoint());
        if (row < 0) {
            return;
        }

        Object imgVal = tblOrderManager.getValueAt(row, COL_ANH);
        showImageOnLabel(imgVal);

        if (evt.getClickCount() == 2 && imgVal != null) {
            String path = resolveImagePath(imgVal);
            if (path != null) {
                openImage(path);
            }
        }
    }//GEN-LAST:event_tblOrderManagerMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int sl;
        try {
            sl = Integer.parseInt(txtSoLuong.getText());
            if (sl <= 0) {
                XDialog.alert("Số lượng phải lớn hơn 0");
                return;
            }
        } catch (NumberFormatException e) {
            XDialog.alert("Số lượng phải là số nguyên hợp lệ");
            return;
        }

        if (tblTongMonAn.getSelectedRow() != -1) {
            SuaSoLuongDangMua();
        } else {
            SuaSoLuong();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btn_huyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_huyActionPerformed
        int selectedRow = tblTongMonAn.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tblTongMonAn.getModel();
            model.removeRow(selectedRow);
            updateTongTien();
            JOptionPane.showMessageDialog(this, "Đã hủy món thành công.");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần hủy.");
        }
    }//GEN-LAST:event_btn_huyActionPerformed

    private void btn_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ClearActionPerformed
        this.clear();
        filltblDaNMua();
    }//GEN-LAST:event_btn_ClearActionPerformed

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
        int selectedRow = tblOrderManager.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn món trong bảng OrderManager.");
            return;
        }

        String ma = tblOrderManager.getValueAt(selectedRow, 0).toString();
        String ten = tblOrderManager.getValueAt(selectedRow, 1).toString();
        float gia = Float.parseFloat(tblOrderManager.getValueAt(selectedRow, 2).toString());

        int soLuongNhap = 1;
        try {
            String slText = txtSoLuong.getText().trim();
            if (!slText.isEmpty()) {
                soLuongNhap = Integer.parseInt(slText);
                if (soLuongNhap <= 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0.");
                    return;
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên.");
            return;
        }

        MonAn mon = MonAnDao.findByID(ma);
        int tonKho = mon.getSoLuong();

        if (soLuongNhap > tonKho) {
            JOptionPane.showMessageDialog(this,
                    "Số lượng nhập vượt quá tồn kho (" + tonKho + "). Hệ thống sẽ tự chỉnh về " + tonKho);
            soLuongNhap = tonKho;
        }

        DefaultTableModel model = (DefaultTableModel) tblTongMonAn.getModel();
        boolean found = false;

        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(ma)) {
                int currentQty = Integer.parseInt(model.getValueAt(i, 3).toString());
                int newQty = currentQty + soLuongNhap;
                if (newQty > tonKho) {
                    newQty = tonKho;
                    JOptionPane.showMessageDialog(this,
                            "Tổng số lượng cho món này vượt tồn kho. Đã chỉnh về " + newQty);
                }
                model.setValueAt(newQty, i, 3);
                found = true;
                break;
            }
        }

        if (!found) {
            model.addRow(new Object[]{ma, ten, gia, soLuongNhap});
        }

        updateTongTien();
        txtSoLuong.setText("");
        lblHinhAnh.setIcon(null);

    }//GEN-LAST:event_btn_themActionPerformed

    private void btn_muaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_muaActionPerformed
        String masd = lblMaSd.getText().trim();
        if (masd.isEmpty()) {
            showSuccessDialog("Bạn đã bỏ qua bước chọn máy từ danh sách sử dụng", 3000);
            return;
        }
        this.create();
    }//GEN-LAST:event_btn_muaActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed

    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void tblDaMuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDaMuaMouseClicked
        int Slt = tblDaMua.getSelectedRow();
        if (Slt >= 0) {
            String id = tblDaMua.getValueAt(Slt, 0).toString();
            String GiaTien = tblDaMua.getValueAt(Slt, 2).toString();
            String Soluong = tblDaMua.getValueAt(Slt, 3).toString();
            String Tong = tblDaMua.getValueAt(Slt, 4).toString();
            txtSoLuong.setText(Soluong);
            lblTongTien.setText(Tong);
            lblMaDaMua.setText(id);
            lblGiaMon.setText(GiaTien);
        }
    }//GEN-LAST:event_tblDaMuaMouseClicked

    private void tblTongMonAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTongMonAnMouseClicked
        int row = tblTongMonAn.getSelectedRow();
        if (row < 0) {
            return;
        }

        String tongTien = tblTongMonAn.getValueAt(row, 2).toString();
        String soLuong = tblTongMonAn.getValueAt(row, 3).toString();

        txtSoLuong.setText(soLuong);
        lblTongTien.setText(tongTien);
    }//GEN-LAST:event_tblTongMonAnMouseClicked

    private void jPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseEntered
        CapNhat();
    }//GEN-LAST:event_jPanel4MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuJDialog dialog = new MenuJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void showSuccessDialog(String message, int timeMillis) {
        JOptionPane optionPane = new JOptionPane(
                message,
                JOptionPane.INFORMATION_MESSAGE,
                JOptionPane.DEFAULT_OPTION,
                null,
                new Object[]{},
                null);

        JDialog dialog = optionPane.createDialog(this, "Thông báo");

        dialog.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                dialog.dispose();
            }
        });
        new javax.swing.Timer(timeMillis, e -> dialog.dispose()).start();
        dialog.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tabpnl;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btn_Clear;
    private javax.swing.JButton btn_huy;
    private javax.swing.JButton btn_mua;
    private javax.swing.JButton btn_them;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblGiaMon;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblMaDaMua;
    private javax.swing.JLabel lblMaSd;
    private javax.swing.JLabel lblNgayHienTai;
    private javax.swing.JLabel lblTenMay;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTable tblDaMua;
    private javax.swing.JTable tblOrderManager;
    private javax.swing.JTable tblTongMonAn;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables
    public void CapNhat() {
        filltblDaNMua();
    }

    private void updateTongTien() {
        DefaultTableModel model = (DefaultTableModel) tblTongMonAn.getModel();
        double tongTien = 0;

        for (int i = 0; i < model.getRowCount(); i++) {
            Object giaObj = model.getValueAt(i, 2);
            Object soLuongObj = model.getValueAt(i, 3);

            if (giaObj != null && soLuongObj != null) {
                try {
                    double gia = Double.parseDouble(giaObj.toString().trim());
                    int soLuong = Integer.parseInt(soLuongObj.toString().trim());
                    tongTien += gia * soLuong;
                } catch (NumberFormatException e) {
                }
            }
        }

        java.text.DecimalFormat df = new java.text.DecimalFormat("#,###.##");
        lblTongTien.setText(df.format(tongTien) + " VNĐ");
    }

    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblOrderManager.getModel();
        model.setRowCount(0);
        List<MonAn> items = MonAnDao.findAll();
        for (MonAn item : items) {
            Object[] rowData = {
                item.getId(),
                item.getTenMon(),
                item.getGiaTien(),
                item.getHinhANh()
            };
            model.addRow(rowData);
        }
    }

    public void create() {
        int MaSD = Integer.parseInt(lblMaSd.getText().trim());
        String tenMay = lblTenMay.getText().trim();
        try {
            DefaultTableModel model = (DefaultTableModel) tblTongMonAn.getModel();
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Không có món nào để mua.");
                return;
            }

            java.sql.Date ngayMua = new java.sql.Date(System.currentTimeMillis());

            for (int i = 0; i < model.getRowCount(); i++) {
                String maMon = model.getValueAt(i, 0).toString();
                String tenMon = model.getValueAt(i, 1).toString();
                float gia = Float.parseFloat(model.getValueAt(i, 2).toString());
                int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());

                double tongTienMon = gia * soLuong;

                Menu order = new Menu(i, MaSD, tenMay, maMon, tenMon, gia, ngayMua, soLuong, tongTienMon);
                MenuDao.Mua(order);
            }

            XDialog.alert("Mua thành công");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi mua: " + e.getMessage());
        }
    }

    public void clear() {
        lblTongTien.setText("");
        txtSoLuong.setText("");
        DefaultTableModel model = (DefaultTableModel) tblTongMonAn.getModel();
        model.setRowCount(0);
    }

    public void NgayHienTai() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        lblNgayHienTai.setText("Ngày hiện tại " + sdf.format(new java.util.Date()));
    }

    @Override
    public void filltblDaNMua() {
        DefaultTableModel model = (DefaultTableModel) tblDaMua.getModel();
        model.setRowCount(0);
        int MaSDMay = Integer.parseInt(lblMaSd.getText());
        List<Menu> items = MenuDao.FindByIdSD(MaSDMay);
        for (Menu item : items) {
            Object[] rowData = {
                item.getId(),
                item.getTenMon(),
                item.getGiaTien(),
                item.getSoLuong(),
                item.getTongTien()
            };
            model.addRow(rowData);
        }
    }

    @Override
    public Menu getFromDaMua() {
        Menu mn = new Menu();

        String idText = lblMaDaMua.getText().trim();
        String tongTienText = lblTongTien.getText().trim();
        String soLuongText = txtSoLuong.getText().trim();

        if (idText.isEmpty() || tongTienText.isEmpty() || soLuongText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn món từ bảng đã mua trước khi sửa.");
            return null;
        }

        mn.setId(Integer.parseInt(idText));
        mn.setTongTien(Double.parseDouble(tongTienText));
        mn.setSoLuong(Integer.parseInt(soLuongText));

        return mn;
    }

    @Override
    public void SuaSoLuong() {
        try {
            Menu mn = this.getFromDaMua();
            MenuDao.UpSoluong(mn);
            filltblDaNMua();
            XDialog.alert("Sửa số lượng thành công ");
        } catch (Exception e) {
            XDialog.alert("Lỗi sửa số lượng");
        }
    }

    public Menu getFromDangMua() {
        Menu mn = new Menu();

        String idText = lblMaDaMua.getText().trim();
        String tongTienText = lblTongTien.getText().trim();
        String soLuongText = txtSoLuong.getText().trim();

        if (idText.isEmpty() || tongTienText.isEmpty() || soLuongText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn món từ bảng đã mua trước khi sửa.");
            return null;
        }

        mn.setId(Integer.parseInt(idText));
        mn.setTongTien(Double.parseDouble(tongTienText));
        mn.setSoLuong(Integer.parseInt(soLuongText));

        return mn;
    }

    public void SuaSoLuongDangMua() {
        int row = tblTongMonAn.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn món trong bảng đang mua để sửa.");
            return;
        }

        String soLuongText = txtSoLuong.getText().trim();
        if (soLuongText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng mới.");
            return;
        }

        try {
            int soLuong = Integer.parseInt(soLuongText);
            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0.");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblTongMonAn.getModel();
            model.setValueAt(soLuong, row, 3);

            updateTongTien();

            XDialog.alert("Sửa số lượng thành công trong danh sách đang mua.");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên hợp lệ.");
        }
    }

    private String resolveImagePath(Object cellVal) {
        if (cellVal == null) {
            return null;
        }
        String p = cellVal.toString().trim();
        if (p.isEmpty()) {
            return null;
        }

        File f = new File(p);
        if (f.exists()) {
            return f.getAbsolutePath();
        }

        File alt1 = new File("src/images/" + p);
        if (alt1.exists()) {
            return alt1.getAbsolutePath();
        }

        File alt2 = new File("images/" + p);
        if (alt2.exists()) {
            return alt2.getAbsolutePath();
        }

        return null;
    }

    private ImageIcon resizeToLabel(String path, javax.swing.JLabel label) {
        ImageIcon icon = new ImageIcon(path);
        int w = label.getWidth() > 0 ? label.getWidth() : 180;
        int h = label.getHeight() > 0 ? label.getHeight() : 140;
        Image scaled = icon.getImage().getScaledInstance(w, h, Image.SCALE_SMOOTH);
        return new ImageIcon(scaled);
    }

    private void showImageOnLabel(Object cellVal) {
        String path = resolveImagePath(cellVal);
        if (path != null) {
            lblHinhAnh.setIcon(resizeToLabel(path, lblHinhAnh));
            lblHinhAnh.setText(null);
            lblHinhAnh.setToolTipText(path);
            duongDanAnhDangChon = path;
        } else {
            lblHinhAnh.setIcon(null);
            lblHinhAnh.setText("Không có ảnh / Không tìm thấy");
            lblHinhAnh.setToolTipText(null);
            duongDanAnhDangChon = null;
        }
    }

    private void openImage(String path) {
        try {
            ImageIcon icon = new ImageIcon(path);
            Image img = icon.getImage().getScaledInstance(800, 800, Image.SCALE_SMOOTH);
            ImageIcon big = new ImageIcon(img);
            javax.swing.JLabel lb = new javax.swing.JLabel(big);
            javax.swing.JScrollPane sp = new javax.swing.JScrollPane(lb);
            sp.setPreferredSize(new java.awt.Dimension(900, 820));
            javax.swing.JOptionPane.showMessageDialog(this, sp, "Xem ảnh lớn", javax.swing.JOptionPane.PLAIN_MESSAGE);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Không thể mở ảnh: " + e.getMessage());
        }
    }

}
