/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.manager;

import controller.QuanLyMayTinhConntroll;
import dao.MayTinhDAO;
import daoImpl.MayTinhDAOImpl;
import entity.MayTinh;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import util.XDialog;

/**
 *
 * @author FPT
 */
public class QuanLyMayTinh extends javax.swing.JDialog implements QuanLyMayTinhConntroll {

    /**
     * Creates new form QuanLyMayTinh
     */
    MayTinhDAO dao = new MayTinhDAOImpl();
    List<MayTinh> list = List.of();

    public QuanLyMayTinh(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblQLMT = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        cboTrangThai = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        txtGia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblMaMay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quan Ly May Tinh");

        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        tblQLMT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã máy", "Tên máy", "Giá theo giờ", "Trạng thái"
            }
        ));
        tblQLMT.setName(""); // NOI18N
        tblQLMT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLMTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblQLMT);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Mã Máy Tính ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Tên Máy Tính ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Trạng thái");

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Sửa");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hoạt động ", "Ngừng hoạt động", "Bảo trì" }));
        cboTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTrangThaiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Giá theo giờ");

        lblMaMay.setText(".................");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMaMay))
                            .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(204, 204, 204)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaMay, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, lblMaMay});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int hang = tblQLMT.getRowCount();
        String tenNhap = txtName.getText().trim();
        boolean trungTen = false;

        for (int i = 0; i < hang; i++) {
            String tenMayTrongBang = tblQLMT.getValueAt(i, 1).toString().trim();
            if (tenNhap.equalsIgnoreCase(tenMayTrongBang)) {
                trungTen = true;
                break;
            }
        }

        if (trungTen) {
            XDialog.alert("Tên máy " + tenNhap + "đã tồn tại trong bảng!");
            return;
        }

        create();
        clear();

    }//GEN-LAST:event_btnThemActionPerformed

    private void tblQLMTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLMTMouseClicked
        // TODO add your handling code here:
        int index = tblQLMT.getSelectedRow();
        if (index >= 0) {
            fillTXT(index);
        }
    }//GEN-LAST:event_tblQLMTMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        clear();
        fillToTable();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        int hang = tblQLMT.getRowCount();
        String tenNhap = txtName.getText().trim();
        boolean trungTen = false;

        for (int i = 0; i < hang; i++) {
            String tenMayTrongBang = tblQLMT.getValueAt(i, 1).toString().trim();
            if (tenNhap.equalsIgnoreCase(tenMayTrongBang)) {
                trungTen = true;
                break;
            }
        }

        if (trungTen) {
            XDialog.alert("Tên máy " + tenNhap + "đã tồn tại trong bảng!");
            return;
        }

        update();
        clear();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (tblQLMT.getSelectedRow() < 0) {
            XDialog.alert("Vui lòng chọn máy bạn muốn xóa");
            return;
        }
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void cboTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTrangThaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyMayTinh dialog = new QuanLyMayTinh(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void fillTXT(int row) {
        if (row < 0 || row >= tblQLMT.getRowCount()) {
            System.out.println("Chỉ số dòng không hợp lệ: " + row);
            return;
        }
        Object Id = tblQLMT.getValueAt(row, 0);
        Object TenMay = tblQLMT.getValueAt(row, 1);
        Object TrangThai = tblQLMT.getValueAt(row, 3);
        Object Gia = tblQLMT.getValueAt(row, 2);
        txtGia.setText(Gia != null ? Gia.toString() : "");
        lblMaMay.setText(Id != null ? Id.toString() : "");
        txtName.setText(TenMay != null ? TenMay.toString() : "");
        if (TrangThai != null) {
            String trangThai = TrangThai.toString().trim();
            if (trangThai.equalsIgnoreCase("Hoạt động")) {
                cboTrangThai.setSelectedIndex(0);
            } else if (trangThai.equalsIgnoreCase("Ngừng hoạt động")) {
                cboTrangThai.setSelectedIndex(1);
            } else if (trangThai.equalsIgnoreCase("Bảo trì")) {
                cboTrangThai.setSelectedIndex(2);
            } else {
                cboTrangThai.setSelectedIndex(-1);
            }
        } else {
            cboTrangThai.setSelectedIndex(-1);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblMaMay;
    private javax.swing.JTable tblQLMT;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void open() {
        setLocationRelativeTo(null);
        fillToTable();
    }

    @Override
    public void setForm(MayTinh mt) {
        txtName.setText(mt.getTenMay());
        if (mt.getTrangThai() != null) {
            cboTrangThai.setSelectedItem(mt.getTrangThai().trim());
        } else {
            cboTrangThai.setSelectedIndex(0);
        }
    }

    @Override
    public MayTinh getForm() {
        MayTinh entity = new MayTinh();
        entity.setTenMay(txtName.getText());
        entity.setGiaTheoGio(Integer.parseInt(txtGia.getText()));
        entity.setTrangThai(cboTrangThai.getSelectedItem().toString());
        return entity;

    }

    public MayTinh getFormByUp() {
        MayTinh entity = new MayTinh();
        entity.setId(lblMaMay.getText());
        entity.setTenMay(txtName.getText());
        entity.setGiaTheoGio(Integer.parseInt(txtGia.getText()));
        entity.setTrangThai(cboTrangThai.getSelectedItem().toString());
        return entity;

    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblQLMT.getModel();
        model.setRowCount(0);
        list = dao.findAll();
        list.forEach(item -> {
            Object[] rowData = {
                item.getId(),
                item.getTenMay(),
                item.getGiaTheoGio(),
                item.getTrangThai(),
                false
            };
            model.addRow(rowData);
        });
    }

    @Override
    public void edit() {
    }

    @Override
    public void create() {
        String tenMay = txtName.getText().trim();
        if (tenMay.isEmpty()) {
            XDialog.alert("Vui lòng nhập tên máy");
            return;
        }

        String giaStr = txtGia.getText().trim();
        if (giaStr.isEmpty()) {
            XDialog.alert("Vui lòng nhập giá theo giờ");
            return;
        }

        try {
            double gia = Double.parseDouble(giaStr);
            if (gia <= 0) {
                XDialog.alert("Giá theo giờ phải lớn hơn 0");
                return;
            }
        } catch (NumberFormatException e) {
            XDialog.alert("Giá theo giờ phải là số hợp lệ");
            return;
        }

        MayTinh mt = this.getForm();
        dao.create(mt);
        this.fillToTable();
    }

    @Override
    public void update() {
        if (lblMaMay.getText().trim().isEmpty()) {
            XDialog.alert("Vui lòng chọn máy bạn muốn sửa");
            return;
        }

        String tenMay = txtName.getText().trim();
        if (tenMay.isEmpty()) {
            XDialog.alert("Vui lòng nhập tên máy");
            return;
        }

        String giaStr = txtGia.getText().trim();
        if (giaStr.isEmpty()) {
            XDialog.alert("Vui lòng nhập giá theo giờ");
            return;
        }

        try {
            double gia = Double.parseDouble(giaStr);
            if (gia <= 0) {
                XDialog.alert("Giá theo giờ phải lớn hơn 0");
                return;
            }
        } catch (NumberFormatException e) {
            XDialog.alert("Giá theo giờ phải là số hợp lệ");
            return;
        }

        MayTinh mt = this.getFormByUp();
        dao.update(mt);
        this.fillToTable();
        XDialog.alert("Cập nhật thành công!");
    }

    @Override
    public void delete() {
        String id = lblMaMay.getText().trim();

        if (id.isEmpty()) {
            XDialog.alert("Vui lòng chọn máy bạn muốn xóa");
            return;
        }

        try {
            dao.deleteByID(id);
            fillToTable();
            clear();
            XDialog.alert("Xóa thành công!");
        } catch (Exception e) {
            XDialog.alert("Xóa thất bại! " + e.getMessage());
        }
    }

    @Override
    public void clear() {
        lblMaMay.setText("");
        txtName.setText("");
        txtGia.setText("");
        cboTrangThai.setSelectedIndex(0);
        fillToTable();
    }

    @Override
    public void setEditable(boolean editable) {

    }

}
