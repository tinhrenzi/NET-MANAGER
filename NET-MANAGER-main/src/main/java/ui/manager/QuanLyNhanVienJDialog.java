/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.manager;

import controller.QuanLyNhanVienController;
import daoImpl.AdminDAOImpl;
import entity.Admin;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.XDialog;
import dao.AdminDAO;
import util.XAuth;
import javax.swing.event.DocumentListener;
import javax.swing.event.DocumentEvent;
/**
 *
 * @author Admin
 */
public class QuanLyNhanVienJDialog extends javax.swing.JDialog implements QuanLyNhanVienController {

    /**
     * Creates new form QuanLyNhanVienJDialog
     */
    AdminDAO dao = new AdminDAOImpl();
    List<Admin> items = List.of();

    public QuanLyNhanVienJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fillToTable();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtNamSinh = new javax.swing.JTextField();
        rdo1 = new javax.swing.JRadioButton();
        rdo2 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cboVaitro = new javax.swing.JComboBox<>();
        dacDateCre = new com.toedter.calendar.JDateChooser();
        lblID = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsermager = new javax.swing.JTable();
        txtFindbyid = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Giao diện quản lý nhân viên");
        setBackground(new java.awt.Color(204, 255, 255));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(13, 71, 161));
        jLabel1.setText("Quản Lý Nhân Viên");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(239, 244, 246));

        jLabel3.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel3.setText("ID");

        jLabel4.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel4.setText("Tên đăng nhập");

        jLabel5.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel5.setText("Mật khẩu");

        jLabel6.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel6.setText("Năm sinh");

        txtName.setBackground(new java.awt.Color(243, 244, 246));
        txtName.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(102, 102, 102)));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel7.setText("Email");

        jLabel8.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel8.setText("Trạng thái");

        jLabel9.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel9.setText("Phone");

        txtEmail.setBackground(new java.awt.Color(243, 244, 246));
        txtEmail.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(102, 102, 102)));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtPhone.setBackground(new java.awt.Color(243, 244, 246));
        txtPhone.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtPhone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(102, 102, 102)));
        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        txtNamSinh.setBackground(new java.awt.Color(243, 244, 246));
        txtNamSinh.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtNamSinh.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(102, 102, 102)));
        txtNamSinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamSinhActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdo1);
        rdo1.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        rdo1.setText("Hoạt động");

        buttonGroup1.add(rdo2);
        rdo2.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        rdo2.setText("Không hoạt động");

        jLabel12.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel12.setText("Ngày tạo");

        txtPass.setBackground(new java.awt.Color(243, 244, 246));
        txtPass.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtPass.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(102, 102, 102)));
        txtPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPassMouseClicked(evt);
            }
        });
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel10.setText("Vai trò");

        cboVaitro.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        cboVaitro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý ", "Nhân viên" }));
        cboVaitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboVaitroActionPerformed(evt);
            }
        });

        dacDateCre.setBackground(new java.awt.Color(204, 204, 204));
        dacDateCre.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        lblID.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        lblID.setText("Mã mặc định AD");

        jPanel2.setBackground(new java.awt.Color(243, 244, 246));

        btnCreate.setBackground(new java.awt.Color(22, 163, 74));
        btnCreate.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Thêm");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(220, 38, 38));
        btnUpdate.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(220, 38, 38));
        jButton1.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdate)
                    .addComponent(jButton1))
                .addGap(105, 105, 105))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(124, 124, 124))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(jLabel6)
                            .addComponent(txtNamSinh, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cboVaitro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dacDateCre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(rdo1)
                            .addGap(18, 18, 18)
                            .addComponent(rdo2))))
                .addGap(98, 98, 98))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtName, txtPass});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblID))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdo1)
                                .addComponent(rdo2)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboVaitro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNamSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dacDateCre, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dacDateCre, txtEmail, txtNamSinh, txtName, txtPass, txtPhone});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Biểu mẫu", jPanel3);

        jPanel4.setBackground(new java.awt.Color(239, 244, 246));

        tblUsermager.setAutoCreateRowSorter(true);
        tblUsermager.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        tblUsermager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Tên", "Mật khẩu", "Vai trò", "Trạng thái", "Năm sinh", "Email", "Số điện thại", "Ngày tạo"
            }
        ));
        tblUsermager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsermagerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsermager);

        txtFindbyid.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtFindbyid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindbyidActionPerformed(evt);
            }
        });

        btnFind.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnFind.setText("Tìm kiếm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(220, 38, 38));
        btnDelete.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1190, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(txtFindbyid, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFind)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFindbyid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Thông tin người dùng", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(412, 412, 412)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
                                         
    String username = txtName.getText().trim();
    String email = txtEmail.getText().trim();
    String phone = txtPhone.getText().trim();
    String pass = txtPass.getText().trim();
    String year = txtNamSinh.getText().trim();

    // Regex
    String usernameRegex = "^[a-zA-Z0-9_]+$";
    String yearRegex = "^[0-9]{4}$";
    String passwordRegex = "^[a-zA-Z0-9_!@#$%^&*]+$";
    String passRegex = "^(?=.*[A-Z]).{7,}$";
    String emailRegex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$";
    String phoneRegex = "^0\\d{9}$";

    // Check username
    if (username.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Tên đăng nhập không được để trống");
        return;
    }
    if (!username.matches(usernameRegex)) {
        JOptionPane.showMessageDialog(this, "Tên đăng nhập không hợp lệ! (Chỉ dùng chữ không dấu, số và gạch dưới)");
        return;
    }

    // Check các trường khác
    if (year.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Năm sinh không được trống");
        return;
    }
    if (pass.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Mật khẩu không được trống");
        return;
    }
    if (email.isEmpty() || phone.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Không được để trống Email hoặc Số điện thoại!");
        return;
    }
    if (!year.matches(yearRegex)) {
        JOptionPane.showMessageDialog(this, "Năm sinh không hợp lệ");
        return;
    }
    // Check Password
    if (pass.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống");
        return;
    }
    if (!pass.matches(passwordRegex)) {
        JOptionPane.showMessageDialog(this, "Mật khẩu không hợp lệ! (Không được chứa dấu tiếng Việt)");
        return;
    }
    if (pass.length() < 7 || !pass.matches(".*[A-Z].*")) {
        JOptionPane.showMessageDialog(this, "Mật khẩu phải >= 7 ký tự và có ít nhất 1 chữ in hoa");
        return;
    }
    if (!email.matches(emailRegex)) {
        JOptionPane.showMessageDialog(this, "Email không hợp lệ!");
        return;
    }
    if (!phone.matches(phoneRegex)) {
        JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ! (Phải bắt đầu bằng 0 và đủ 10 số)");
        return;
    }

    this.create();


    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                                        
    String username = txtName.getText().trim();
    String email = txtEmail.getText().trim();
    String phone = txtPhone.getText().trim();
    String pass = txtPass.getText().trim();
    String year = txtNamSinh.getText().trim();

    // Regex
    String usernameRegex = "^[a-zA-Z0-9_]+$";
    String yearRegex = "^[0-9]{4}$";
    String passRegex = "^(?=.*[A-Z]).{7,}$";
    String passwordRegex = "^[a-zA-Z0-9_!@#$%^&*]+$";
    String emailRegex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$";
    String phoneRegex = "^0\\d{9}$";

    // Check username
    if (username.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Tên đăng nhập không được để trống");
        return;
    }
    if (!username.matches(usernameRegex)) {
        JOptionPane.showMessageDialog(this, "Tên đăng nhập không hợp lệ! (Chỉ dùng chữ không dấu, số và gạch dưới)");
        return;
    }

    // Check các trường khác
    if (year.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Năm sinh không được trống");
        return;
    }
    if (pass.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Mật khẩu không được trống");
        return;
    }
    if (email.isEmpty() || phone.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Không được để trống Email hoặc Số điện thoại!");
        return;
    }
    if (!year.matches(yearRegex)) {
        JOptionPane.showMessageDialog(this, "Năm sinh không hợp lệ");
        return;
    }
    // Check Password
    if (pass.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống");
        return;
    }
    if (!pass.matches(passwordRegex)) {
        JOptionPane.showMessageDialog(this, "Mật khẩu không hợp lệ! (Không được chứa dấu tiếng Việt)");
        return;
    }
    if (pass.length() < 7 || !pass.matches(".*[A-Z].*")) {
        JOptionPane.showMessageDialog(this, "Mật khẩu phải >= 7 ký tự và có ít nhất 1 chữ in hoa");
        return;
    }
    if (!email.matches(emailRegex)) {
        JOptionPane.showMessageDialog(this, "Email không hợp lệ!");
        return;
    }
    if (!phone.matches(phoneRegex)) {
        JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ! (Phải bắt đầu bằng 0 và đủ 10 số)");
        return;
    }

   
        String oldRole = tblUsermager.getValueAt(tblUsermager.getSelectedRow(), 3).toString(); 
        String newRole = cboVaitro.getSelectedItem().toString();

        if ("Quản lý".equalsIgnoreCase(oldRole) && "Nhân viên".equalsIgnoreCase(newRole)) {
            JOptionPane.showMessageDialog(this, "Không thể hạ Quản lý xuống Nhân viên");
            return;
        }

        this.update();

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblUsermagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsermagerMouseClicked
        // TODO add your handling code here:
        int index = tblUsermager.getSelectedRow();
        fillTXT(index);
    }//GEN-LAST:event_tblUsermagerMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        String id = txtFindbyid.getText();
        this.findname(id);
    }//GEN-LAST:event_btnFindActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:      
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed

    }//GEN-LAST:event_txtPassActionPerformed

    private void txtPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPassMouseClicked

    }//GEN-LAST:event_txtPassMouseClicked

    private void txtNamSinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamSinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamSinhActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void cboVaitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboVaitroActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cboVaitroActionPerformed

    private void txtFindbyidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindbyidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindbyidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyNhanVienJDialog dialog = new QuanLyNhanVienJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void fillTXT(int row) {
        Admin user = new Admin();
        lblID.setText(tblUsermager.getValueAt(row, 0).toString());
        txtName.setText(tblUsermager.getValueAt(row, 1).toString());
        txtPass.setText(tblUsermager.getValueAt(row, 2).toString());
        cboVaitro.setSelectedItem(tblUsermager.getValueAt(row, 3).toString());
        String status = tblUsermager.getValueAt(row, 4).toString();
        if (status.equalsIgnoreCase("Hoạt động")) {
            rdo1.setSelected(true);
        } else {
            rdo2.setSelected(true);
        }

        txtNamSinh.setText(tblUsermager.getValueAt(row, 5).toString());
        txtEmail.setText(tblUsermager.getValueAt(row, 6).toString());
        txtPhone.setText(tblUsermager.getValueAt(row, 7).toString());
        dacDateCre.setDate((java.sql.Date) tblUsermager.getValueAt(row, 8));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboVaitro;
    private com.toedter.calendar.JDateChooser dacDateCre;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JRadioButton rdo1;
    private javax.swing.JRadioButton rdo2;
    private javax.swing.JTable tblUsermager;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFindbyid;
    private javax.swing.JTextField txtNamSinh;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    @Override
    public void open() {
        this.setLocationRelativeTo(null);
        this.fillToTable();
        this.clear();
    }

    public void setRole() {
        int role = XAuth.user.getVaiTro();
        if (role == 2) {
            btnUpdate.setEnabled(false);
        } else {
            btnUpdate.setEnabled(true);
        }
    }

    @Override
    public void setForm(Admin entity) {
        lblID.setText(entity.getId());
        txtName.setText(entity.getTen());
        txtPass.setText(entity.getMatKhau());
        txtEmail.setText(entity.getEmail());
        cboVaitro.setSelectedItem(entity.getVaiTro() + 1);
        txtPhone.setText(entity.getSoDienThoai());
        txtNamSinh.setText(new SimpleDateFormat("dd/MM/yyyy").format(entity.getNamSinh()));
        dacDateCre.setDate(entity.getNgayTao());
        rdo1.setSelected(entity.isTrangThai());
        rdo2.setSelected(!entity.isTrangThai());

    }

    @Override
    public Admin getForm() {
        Admin users = new Admin();

        try {
            users.setId(lblID.getText());
            users.setTen(txtName.getText());
            users.setMatKhau(txtPass.getText());
            users.setVaiTro(cboVaitro.getSelectedIndex() + 1);
            users.setTrangThai(rdo1.isSelected());
            users.setEmail(txtEmail.getText());
            users.setSoDienThoai(txtPhone.getText());
            users.setNamSinh(Integer.parseInt(txtNamSinh.getText()));
            users.setNgayTao(dacDateCre.getDate());
        } catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }

        return users;
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblUsermager.getModel();
        model.setRowCount(0);
        items = dao.findAll();
        items.forEach(item -> {
            String Vaitro = switch (item.getVaiTro()) {
                case 1 ->
                    "Quản lý";
                case 2 ->
                    "Nhân viên";
                default ->
                    "ko ro";
            };
            Object[] rowData = {
                item.getId(),
                item.getTen(),
                item.getMatKhau(),
                Vaitro,
                item.isTrangThai() ? "Hoạt động" : "Không hoạt động",
                item.getNamSinh(),
                item.getEmail(),
                item.getSoDienThoai(),
                item.getNgayTao(),
                false
            };
            model.addRow(rowData);
        });
    }

    @Override
    public void edit() {
        int row = tblUsermager.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui long chon dong can chinh sua");
            return;
        }
    }

    @Override
    public void create() {
        Admin user = this.getForm();
        dao.create(user);
        this.fillToTable();
        this.clear();
    }

    @Override
    public void update() {
        Admin user = this.getForm();
        dao.update(user);
        this.fillToTable();
    }

    @Override
    public void delete() {
        String id = lblID.getText().trim();

        if (id.isEmpty()) {
            XDialog.alert("Vui lòng chọn tài khoản cần xóa!");
            return;
        }

        Admin admin = dao.findByID(id);
        if (admin != null && admin.getVaiTro() == 1) {
            XDialog.alert("Không thể xóa tài khoản quản lý!");
            return;
        }

        if (XDialog.confirm("Bạn xác nhận xóa?")) {
            dao.deleteByID(id);
            this.fillToTable();
            this.clear();
            XDialog.alert("Xóa thành công!");
        }
    }

    @Override
    public void clear() {
        txtNamSinh.setText("");
        dacDateCre.setDate(null);
        txtEmail.setText("");
        txtFindbyid.setText("");
        lblID.setText("Mã mặc định là AD");
        txtName.setText("");
        txtPass.setText("");
        txtPhone.setText("");
        buttonGroup1.clearSelection();

    }

    @Override
    public void setEditable(boolean editable) {

    }

    public void findname(String name) {
        String ten = txtFindbyid.getText();
        DefaultTableModel model = (DefaultTableModel) tblUsermager.getModel();
        model.setRowCount(0);
        for (Admin i : items) {
            String Vaitro = switch (i.getVaiTro()) {
                case 1 ->
                    "Quản lý";
                case 2 ->
                    "Nhân viên";
                default ->
                    "ko ro";
            };
            if (i.getTen().toLowerCase().contains(ten.toLowerCase())) {
                model.addRow(new Object[]{i.getId(),
                    i.getTen(),
                    i.getMatKhau(),
                    Vaitro,
                    i.isTrangThai() ? "Hoạt động" : "Không hoạt động",
                    i.getNamSinh(),
                    i.getEmail(),
                    i.getSoDienThoai(),
                    i.getNgayTao()});
            }
        }
    }
}
